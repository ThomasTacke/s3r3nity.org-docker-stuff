version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--log.level=DEBUG"

      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

      - "--api.insecure=false"
      - "--api.dashboard=true"

      - "--providers.file.filename=/dynamic.yml"
      - "--providers.docker=true"
      # - "--providers.docker.watch"
      - "--providers.docker.exposedbydefault=false"

      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      
      # - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      # - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      # - --certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}
      # - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json

      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      # LetsEncrypt Staging Server - uncomment when testing
      # - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    volumes:
      - ./traefik/letsencrypt/:/letsencrypt
      - ./traefik/dynamic.yml:/dynamic.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 80:80
      - 443:443
    labels:
      - "traefik.enable=true"

      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_BASIC_AUTH}"
      - "traefik.http.middlewares.traefik-auth.basicauth.removeheader=true"
      - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectScheme.permanent=true"
      - "traefik.http.middlewares.strict-transport.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.strict-transport.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.strict-transport.headers.stsPreload=true"
      - "traefik.http.middlewares.strict-transport.headers.stsIncludeSubdomains=true"

      - "traefik.http.routers.dashboard-plain.entrypoints=web"
      - "traefik.http.routers.dashboard-plain.rule=Host(`traefik-ui.${DOMAIN}`)"
      - "traefik.http.routers.dashboard-plain.middlewares=redirect-https"

      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.dashboard.rule=Host(`traefik-ui.${DOMAIN}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=traefik-auth"
    restart: always
    networks:
      - traefik_external 
      - traefik
      - poste_io
      - nextcloud
      - bitwarden
      - onlinecv
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    image: prom/prometheus
    user: '0'
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.size=256MB'
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.prometheus-plain.entrypoints=web"
      - "traefik.http.routers.prometheus-plain.rule=Host(`prom.${DOMAIN}`)"
      - "traefik.http.routers.prometheus-plain.middlewares=redirect-https"

      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.prometheus.rule=Host(`prom.${DOMAIN}`)"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.routers.prometheus.middlewares=traefik-auth"

      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    networks:
      - traefik
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    user: '0'
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.grafana-plain.entrypoints=web"
      - "traefik.http.routers.grafana-plain.rule=Host(`grafana.${DOMAIN}`)"
      - "traefik.http.routers.grafana-plain.middlewares=redirect-https"

      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)"
      - "traefik.http.routers.grafana.service=grafana"
      # - "traefik.http.routers.grafana.middlewares=traefik-auth"

      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    networks:
      - traefik
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"   

  poste.io:
    image: analogic/poste.io:latest
    container_name: poste.io
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.poste-io-plain.entrypoints=web"
      - "traefik.http.routers.poste-io-plain.rule=Host(`mail.${DOMAIN}`)"
      - "traefik.http.routers.poste-io-plain.middlewares=redirect-https"

      - "traefik.http.routers.poste-io.entrypoints=websecure"
      - "traefik.http.routers.poste-io.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.poste-io.rule=Host(`mail.${DOMAIN}`)"
      # - "traefik.http.routers.poste-io.service=poste-io"

      - "traefik.http.services.poste-io.loadbalancer.server.port=80"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./poste.io/data:/data
    restart: always
    ports:
      - "25:25"
      - "110:110"
      - "143:143"
      - "587:587"
      - "993:993"
      - "995:995"
      - "4190:4190"
    environment:
      - HTTPS=${POSTE_IO_HTTPS}
      - VIRTUAL_HOST=mail.${DOMAIN}
      - HOSTNAME=mail.${DOMAIN}
    networks:
      - poste_io

  nextcloud.db:
    image: mariadb:10.6
    container_name: nextcloud_db
    labels:
      - "traefik.enable=false"
    restart: always
    volumes:
      - ./nextcloud/mysql/lib:/var/lib/mysql:rw
      - ./nextcloud/mysql/log:/var/log/mysql:rw
    environment:
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${NEXTCLOUD_MYSQL_DATABASE}
      - MYSQL_USER=${NEXTCLOUD_MYSQL_USER}
      - MYSQL_PASSWORD=${NEXTCLOUD_MYSQL_PASSWORD}
    networks:
      - nextcloud
  
  nextcloud.redis:
    image: redis:alpine
    container_name: nextcloud_redis
    labels:
      - "traefik.enable=false"
    restart: always
    networks:
      - nextcloud
  
  nextcloud.app:
    image: nextcloud:apache
    container_name: nextcloud_app
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.nextcloud-plain.entrypoints=web"
      - "traefik.http.routers.nextcloud-plain.rule=Host(`nextcloud2.${DOMAIN}`)"
      - "traefik.http.routers.nextcloud-plain.middlewares=redirect-https"

      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud2.${DOMAIN}`)"
      # - "traefik.http.routers.nextcloud.service=nextcloud"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud_redirectregex,strict-transport"

      - "traefik.http.middlewares.nextcloud_redirectregex.redirectregex.permanent=true"
      - "traefik.http.middlewares.nextcloud_redirectregex.redirectregex.regex=https://(.*)/.well-known/(?:card|cal)dav"
      - "traefik.http.middlewares.nextcloud_redirectregex.redirectregex.replacement=https://$${1}/remote.php/dav"

      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
    environment:
      - MYSQL_HOST=nextcloud_db
      - REDIS_HOST=nextcloud_redis
      - MYSQL_USER=${NEXTCLOUD_MYSQL_USER}
      - MYSQL_PASSWORD=${NEXTCLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${NEXTCLOUD_MYSQL_DATABASE}
    volumes:
      - ./nextcloud/var/www/html/data:/var/www/html/data:rw
      - ./nextcloud/var/www/html/config:/var/www/html/config:rw
      - ./nextcloud/var/www/html/apps:/var/www/html/apps:rw
      - ./nextcloud/var/www/html/custom_apps:/var/www/html/custom_apps:rw
      - ./nextcloud/php.ini:/usr/local/etc/php/php.ini:rw
    restart: always
    depends_on:
      - nextcloud.db
      - nextcloud.redis
    networks:
      - nextcloud

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.vaultwarden-plain.entrypoints=web"
      - "traefik.http.routers.vaultwarden-plain.rule=Host(`bitwarden.${DOMAIN}`)"
      - "traefik.http.routers.vaultwarden-plain.middlewares=redirect-https"

      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.vaultwarden.rule=Host(`bitwarden.${DOMAIN}`)"
      # - "traefik.http.routers.vaultwarden.service=vaultwarden"

      - "traefik.http.services.vaultwarden.loadbalancer.server.port=80"
    restart: always
    volumes:
      - ./bitwarden/data:/data/
    networks:
      - bitwarden

  satisfactory:
    build:
      context: ./satisfactory
    restart: always
    container_name: satisfactory-server
    labels:
      - "traefik.enable=false"
    ports:
      - 15777:15777/udp
      - 15000:15000/udp
      - 7777:7777/udp
    volumes:
      - ./satisfactory/data:/home/steam/Satisfactory-dedicated

  minecraft:
    image: itzg/minecraft-server
    labels:
      - "traefik.enable=false"
    ports:
      - "25565:25565"
    environment:
      EULA: "TRUE"
      MEMORY: "4G"
      JVM_XX_OPTS: "-XX:MaxRAMPercentage=75"
    deploy:
      resources:
        limits:
          memory: 4G
    volumes:
      - ./minecraft/data:/data

  palworld-dedicated-server:
    labels:
      - "traefik.enable=false"
    container_name: palworld-dedicated-server
    image: jammsen/palworld-dedicated-server:latest
    restart: always
    network_mode: bridge
    ports:
      - 8211:8211/udp
      - 25575:25575/tcp
    environment:
      - TZ=Europe/Berlin # Change this for logging and backup, see "Environment-Variables" 
      - ALWAYS_UPDATE_ON_START=true
      - MULTITHREAD_ENABLED=true
      - COMMUNITY_SERVER=true
      - BACKUP_ENABLED=true
      - BACKUP_CRON_EXPRESSION=0 * * * *
      - NETSERVERMAXTICKRATE=120
      - DIFFICULTY=None
      - DAYTIME_SPEEDRATE=1.000000
      - NIGHTTIME_SPEEDRATE=1.000000
      - EXP_RATE=1.000000
      - PAL_CAPTURE_RATE=1.000000
      - PAL_SPAWN_NUM_RATE=1.000000
      - PAL_DAMAGE_RATE_ATTACK=1.000000
      - PAL_DAMAGE_RATE_DEFENSE=1.000000
      - PLAYER_DAMAGE_RATE_ATTACK=1.000000
      - PLAYER_DAMAGE_RATE_DEFENSE=1.000000
      - PLAYER_STOMACH_DECREASE_RATE=1.000000
      - PLAYER_STAMINA_DECREACE_RATE=1.000000
      - PLAYER_AUTO_HP_REGENE_RATE=1.000000
      - PLAYER_AUTO_HP_REGENE_RATE_IN_SLEEP=1.000000
      - PAL_STOMACH_DECREACE_RATE=1.000000
      - PAL_STAMINA_DECREACE_RATE=1.000000
      - PAL_AUTO_HP_REGENE_RATE=1.000000
      - PAL_AUTO_HP_REGENE_RATE_IN_SLEEP=1.000000
      - BUILD_OBJECT_DAMAGE_RATE=1.000000
      - BUILD_OBJECT_DETERIORATION_DAMAGE_RATE=1.000000
      - COLLECTION_DROP_RATE=1.000000
      - COLLECTION_OBJECT_HP_RATE=1.000000
      - COLLECTION_OBJECT_RESPAWN_SPEED_RATE=1.000000
      - ENEMY_DROP_ITEM_RATE=1.000000
      - DEATH_PENALTY=All
      - ENABLE_PLAYER_TO_PLAYER_DAMAGE=false
      - ENABLE_FRIENDLY_FIRE=false
      - ENABLE_INVADER_ENEMY=true
      - ACTIVE_UNKO=false
      - ENABLE_AIM_ASSIST_PAD=true
      - ENABLE_AIM_ASSIST_KEYBOARD=false
      - DROP_ITEM_MAX_NUM=3000
      - DROP_ITEM_MAX_NUM_UNKO=100
      - BASE_CAMP_MAX_NUM=128
      - BASE_CAMP_WORKER_MAXNUM=15
      - DROP_ITEM_ALIVE_MAX_HOURS=1.000000 
      - AUTO_RESET_GUILD_NO_ONLINE_PLAYERS=false
      - AUTO_RESET_GUILD_TIME_NO_ONLINE_PLAYERS=72.000000
      - GUILD_PLAYER_MAX_NUM=20
      - PAL_EGG_DEFAULT_HATCHING_TIME=72.000000
      - WORK_SPEED_RATE=1.000000 
      - IS_MULTIPLAY=false
      - IS_PVP=false
      - CAN_PICKUP_OTHER_GUILD_DEATH_PENALTY_DROP=false
      - ENABLE_NON_LOGIN_PENALTY=true
      - ENABLE_FAST_TRAVEL=true
      - IS_START_LOCATION_SELECT_BY_MAP=true
      - EXIST_PLAYER_AFTER_LOGOUT=false
      - ENABLE_DEFENSE_OTHER_GUILD_PLAYER=false
      - COOP_PLAYER_MAX_NUM=4
      - MAX_PLAYERS=32
      - SERVER_NAME=s3r3nity-palworld
      - SERVER_DESCRIPTION=Palworld-Dedicated-Server running in Docker by jammsen
      - ADMIN_PASSWORD=${PALWORLD_ADMIN_PW}
      - SERVER_PASSWORD=${PALWORLD_SERVER_PW}
      - PUBLIC_PORT=8211
      - PUBLIC_IP=${PALWORLD_SERVER_IP}
      - RCON_ENABLED=false
      - RCON_PORT=25575
      - REGION=
      - USEAUTH=true
      - BAN_LIST_URL=https://api.palworldgame.com/api/banlist.txt
    volumes:
      - ./palworld:/palworld

  onlinecv:
    image: rootthekid/onlinecv:v1
    container_name: onlinecv_web
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.onlinecv-plain.entrypoints=web"
      - "traefik.http.routers.onlinecv-plain.rule=Host(`thomas.tacke.email`)"
      - "traefik.http.routers.onlinecv-plain.middlewares=redirect-https"

      - "traefik.http.routers.onlinecv.entrypoints=websecure"
      - "traefik.http.routers.onlinecv.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.onlinecv.rule=Host(`thomas.tacke.email`)"
      # - "traefik.http.routers.onlinecv.service=onlinecv"

      - "traefik.http.services.onlinecv.loadbalancer.server.port=80"
    restart: always
    networks:
      - onlinecv

  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.immich-plain.entrypoints=web"
      - "traefik.http.routers.immich-plain.rule=Host(`immich.${DOMAIN}`)"
      - "traefik.http.routers.immich-plain.middlewares=redirect-https"

      - "traefik.http.routers.immich.entrypoints=websecure"
      - "traefik.http.routers.immich.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.routers.immich.rule=Host(`immich.${DOMAIN}`)"
      # - "traefik.http.routers.immich.service=immich"

      - "traefik.http.services.immich.loadbalancer.server.port=3301"
    volumes:
      - ${IMMICH_UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - UPLOAD_LOCATION=${IMMICH_UPLOAD_LOCATION}
      - DB_DATA_LOCATION=${IMMICH_DB_DATA_LOCATION}
      - TZ=${IMMICH_TZ}
      - IMMICH_VERSION=${IMMICH_VERSION}
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - DB_USERNAME=${IMMICH_DB_USERNAME}
      - DB_DATABASE=${IMMICH_DB_DATABASE}
      - DB_HOSTNAME=immich-database
      - REDIS_HOSTNAME=immich-redis
    depends_on:
      - immich-redis
      - immich-database
    restart: always
    networks:
      - immich

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    labels:
      - "traefik.enable=false"
    volumes:
      - ${IMMICH_MODEL_LOCATION}:/cache
    environment:
      - UPLOAD_LOCATION=${IMMICH_UPLOAD_LOCATION}
      - DB_DATA_LOCATION=${IMMICH_DB_DATA_LOCATION}
      - TZ=${IMMICH_TZ}
      - IMMICH_VERSION=${IMMICH_VERSION}
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - DB_USERNAME=${IMMICH_DB_USERNAME}
      - DB_DATABASE=${IMMICH_DB_DATABASE}
      - DB_HOSTNAME=immich-database
      - REDIS_HOSTNAME=immich-redis
    restart: always
    networks:
      - immich

  immich-redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine@sha256:d6c2911ac51b289db208767581a5d154544f2b2fe4914ea5056443f62dc6e900
    labels:
      - "traefik.enable=false"
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always
    networks:
      - immich

  immich-database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    labels:
      - "traefik.enable=false"
    environment:
      POSTGRES_PASSWORD: ${IMMICH_DB_PASSWORD}
      POSTGRES_USER: ${IMMICH_DB_USERNAME}
      POSTGRES_DB: ${IMMICH_DB_DATABASE}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${IMMICH_DB_DATA_LOCATION}:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='${IMMICH_DB_DATABASE}' || exit 1; Chksum="$$(psql --dbname='${IMMICH_DB_DATABASE}' --username='${IMMICH_DB_USERNAME}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_period: 5m
    command: ["postgres", "-c" ,"shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]
    restart: always
    networks:
      - immich


networks:
  traefik_external:
    external: true
  traefik:
    external: false
  poste_io:
    external: false
  nextcloud:
    external: false
  bitwarden:
    external: false
  onlinecv:
    external: false
  immich:
    external: false
